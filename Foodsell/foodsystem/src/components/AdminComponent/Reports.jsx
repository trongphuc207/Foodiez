import React, { useEffect, useState } from 'react';
import { adminAPI } from '../../api/admin';

export default function Reports() {
  const [reports, setReports] = useState(null);
  const [err, setErr] = useState('');

  useEffect(() => {
    (async () => {
      try {
        const data = await adminAPI.getReports();
        // data c√≥ th·ªÉ l√† Array (danh s√°ch theo th√°ng) ho·∫∑c Object (map c√°c ch·ªâ s·ªë)
        // ‚Üí Chu·∫©n ho√° th√†nh 1 trong 2 UI:
        if (Array.isArray(data)) {
          setReports({ type: 'array', items: data });
        } else if (data && typeof data === 'object') {
          // V√≠ d·ª• backend (theo file b·∫°n g·ª≠i) tr·∫£:
          // { monthlyRevenue: number, totalOrders: number, totalUsers: number, ... }
          const kv = Object.entries(data).map(([key, value]) => ({ key, value }));
          setReports({ type: 'object', items: kv, raw: data });
        } else {
          setReports({ type: 'empty', items: [] });
        }
      } catch (e) {
        console.error(e);
        setErr(e.message || 'L·ªói t·∫£i b√°o c√°o');
      }
    })();
  }, []);

  if (err) return <div style={{ color: '#b00020' }}>{err}</div>;
  if (!reports) return <p>ƒêang t·∫£i d·ªØ li·ªáu...</p>;

  // ====== UI khi BE tr·∫£ danh s√°ch theo th√°ng ======
  if (reports.type === 'array') {
    const items = reports.items || [];
    if (items.length === 0) return <p>Ch∆∞a c√≥ d·ªØ li·ªáu b√°o c√°o.</p>;
    // K·ª≥ v·ªçng m·ªói ph·∫ßn t·ª≠ c√≥ { month, revenue, orders } (ho·∫∑c t∆∞∆°ng t·ª±)
    return (
      <div>
        <h2>B√°o c√°o theo th√°ng</h2>
        <table className="table table-bordered mt-3">
          <thead>
            <tr>
              <th>Th√°ng</th>
              <th>Doanh thu</th>
              <th>ƒê∆°n h√†ng</th>
            </tr>
          </thead>
          <tbody>
            {items.map((r, i) => (
              <tr key={i}>
                <td>{r.month ?? r.thang ?? r.label ?? `#${i + 1}`}</td>
                <td>{r.revenue ?? r.doanhThu ?? r.money ?? 0}</td>
                <td>{r.orders ?? r.soDon ?? r.count ?? 0}</td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>
    );
  }

  // ====== UI khi BE tr·∫£ object map (monthlyRevenue, totalOrders, totalUsers, ...) ======
  if (reports.type === 'object') {
    const d = reports.raw || {};
    return (
      <div>
        <h2>T·ªïng h·ª£p ch·ªâ s·ªë</h2>

        <div className="stat-grid" style={{ marginTop: 12 }}>
          <div className="stat-card">
            <div className="stat-icon">üíµ</div>
            <div className="stat-info">
              <h5>Doanh thu th√°ng</h5>
              <h3>{d.monthlyRevenue ?? 0}</h3>
            </div>
          </div>
          <div className="stat-card">
            <div className="stat-icon">üßæ</div>
            <div className="stat-info">
              <h5>T·ªïng ƒë∆°n</h5>
              <h3>{d.totalOrders ?? 0}</h3>
            </div>
          </div>
          <div className="stat-card">
            <div className="stat-icon">üë§</div>
            <div className="stat-info">
              <h5>T·ªïng ng∆∞·ªùi d√πng</h5>
              <h3>{d.totalUsers ?? 0}</h3>
            </div>
          </div>
        </div>

        <h4 className="mt-4">Chi ti·∫øt (key‚Äìvalue)</h4>
        <table className="table table-striped mt-2">
          <thead>
            <tr>
              <th>Ch·ªâ s·ªë</th>
              <th>Gi√° tr·ªã</th>
            </tr>
          </thead>
          <tbody>
            {reports.items.map((item, i) => (
              <tr key={i}>
                <td>{item.key}</td>
                <td>{String(item.value)}</td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>
    );
  }

  // ====== fallback ======
  return <p>Ch∆∞a c√≥ d·ªØ li·ªáu b√°o c√°o.</p>;
}
